/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as i0 from '@angular/router';
import * as i1 from './router.ngsummary';
import * as i2 from '@angular/core';
import * as i3 from '@angular/common';
export function RouterModuleNgSummary() {
    return [{ summaryKind: 2, type: { reference: i0.RouterModule, diDeps: [{ isAttribute: false,
                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i0.ɵa } } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                        token: { identifier: { reference: i0.Router } } }], lifecycleHooks: [] },
            entryComponents: [], providers: [], modules: [{ reference: i0.RouterModule,
                    diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: true,
                            token: { identifier: { reference: i0.ɵa } } }, { isAttribute: false, isHost: false,
                            isSelf: false, isSkipSelf: false, isOptional: true, token: { identifier: { reference: i0.Router } } }],
                    lifecycleHooks: [] }], exportedDirectives: [{ reference: i0.RouterOutlet },
                { reference: i0.RouterLink }, { reference: i0.RouterLinkWithHref }, { reference: i0.RouterLinkActive }],
            exportedPipes: [] }, i1.RouterOutletNgSummary, i1.RouterLinkNgSummary,
        i1.RouterLinkWithHrefNgSummary, i1.RouterLinkActiveNgSummary];
}
export function RouterOutletNgSummary() {
    return [{ summaryKind: 1, type: { reference: i0.RouterOutlet, diDeps: [{ isAttribute: false,
                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i0.ChildrenOutletContexts } } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { identifier: { reference: i2.ViewContainerRef } } }, { isAttribute: false, isHost: false,
                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i2.ComponentFactoryResolver } } },
                    { isAttribute: true, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { value: 'name' } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false,
                        isOptional: false, token: { identifier: { reference: i2.ChangeDetectorRef } } }], lifecycleHooks: [0,
                    1] }, isComponent: false, selector: 'router-outlet', exportAs: 'outlet', inputs: {}, outputs: { activateEvents: 'activate',
                deactivateEvents: 'deactivate' }, hostListeners: {}, hostProperties: {}, hostAttributes: {},
            providers: [], viewProviders: [], queries: [], viewQueries: [],
            entryComponents: [], changeDetection: null, template: null,
            componentViewType: null, rendererType: null, componentFactory: null }];
}
export function RouterLinkNgSummary() {
    return [{ summaryKind: 1, type: { reference: i0.RouterLink, diDeps: [{ isAttribute: false,
                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i0.Router } } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { identifier: { reference: i0.ActivatedRoute } } }, { isAttribute: true, isHost: false,
                        isSelf: false, isSkipSelf: false, isOptional: false, token: { value: 'tabindex' } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { identifier: { reference: i2.Renderer } } }, { isAttribute: false, isHost: false,
                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i2.ElementRef } } }],
                lifecycleHooks: [] }, isComponent: false, selector: ':not(a)[routerLink]',
            exportAs: null, inputs: { queryParams: 'queryParams', fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling', preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange', replaceUrl: 'replaceUrl', routerLink: 'routerLink',
                preserveQueryParams: 'preserveQueryParams' }, outputs: {}, hostListeners: { click: 'onClick()' },
            hostProperties: {}, hostAttributes: {}, providers: [], viewProviders: [],
            queries: [], viewQueries: [], entryComponents: [],
            changeDetection: null, template: null, componentViewType: null,
            rendererType: null, componentFactory: null }];
}
export function RouterLinkWithHrefNgSummary() {
    return [{ summaryKind: 1, type: { reference: i0.RouterLinkWithHref, diDeps: [{ isAttribute: false,
                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i0.Router } } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { identifier: { reference: i0.ActivatedRoute } } }, { isAttribute: false, isHost: false,
                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.LocationStrategy } } }],
                lifecycleHooks: [1, 3] }, isComponent: false, selector: 'a[routerLink]', exportAs: null,
            inputs: { target: 'target', queryParams: 'queryParams', fragment: 'fragment', queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment', skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl', routerLink: 'routerLink', preserveQueryParams: 'preserveQueryParams' },
            outputs: {}, hostListeners: { click: 'onClick($event.button,$event.ctrlKey,$event.metaKey,$event.shiftKey)' },
            hostProperties: { 'attr.target': 'target', href: 'href' }, hostAttributes: {}, providers: [],
            viewProviders: [], queries: [], viewQueries: [],
            entryComponents: [], changeDetection: null, template: null,
            componentViewType: null, rendererType: null, componentFactory: null }];
}
export function RouterLinkActiveNgSummary() {
    return [{ summaryKind: 1, type: { reference: i0.RouterLinkActive, diDeps: [{ isAttribute: false,
                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i0.Router } } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { identifier: { reference: i2.ElementRef } } }, { isAttribute: false, isHost: false,
                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i2.Renderer } } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { identifier: { reference: i2.ChangeDetectorRef } } }], lifecycleHooks: [1,
                    3, 4] }, isComponent: false, selector: '[routerLinkActive]', exportAs: 'routerLinkActive',
            inputs: { routerLinkActiveOptions: 'routerLinkActiveOptions', routerLinkActive: 'routerLinkActive' },
            outputs: {}, hostListeners: {}, hostProperties: {}, hostAttributes: {}, providers: [],
            viewProviders: [], queries: [{ selectors: [{ identifier: { reference: i0.RouterLink } }],
                    first: false, descendants: true, propertyName: 'links', read: null }, { selectors: [{ identifier: { reference: i0.RouterLinkWithHref } }],
                    first: false, descendants: true, propertyName: 'linksWithHrefs', read: null }],
            viewQueries: [], entryComponents: [], changeDetection: null,
            template: null, componentViewType: null, rendererType: null,
            componentFactory: null }];
}
export function ɵgNgSummary() {
    return [{ summaryKind: 3, type: { reference: i0.ɵg, diDeps: [{ isAttribute: false, isHost: false,
                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i2.Injector } } }],
                lifecycleHooks: [] } }];
}
export function RouterPreloaderNgSummary() {
    return [{ summaryKind: 3, type: { reference: i0.RouterPreloader, diDeps: [{ isAttribute: false,
                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i0.Router } } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { identifier: { reference: i2.NgModuleFactoryLoader } } }, { isAttribute: false,
                        isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i2.Compiler } } },
                    { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false,
                        token: { identifier: { reference: i2.Injector } } }, { isAttribute: false, isHost: false,
                        isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i0.PreloadingStrategy } } }],
                lifecycleHooks: [1] } }];
}
//# sourceMappingURL=router.ngsummary.js.map